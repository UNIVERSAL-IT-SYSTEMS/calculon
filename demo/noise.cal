/* Produces an RGB colour vector (each component scaled from 0..1) for a
 * particular location.
 *
 * pos: vector*2     input location
 * colour: vector*3  output colour
 *
 * perlin(V) produces Perlin noise for a particular vector location.
 */

let positive(x) = if x > 0 then x else 0 in
let max(x) = if x > 1 then 1 else x in
let mp(x) = max(positive(x)) in
let r = perlin([pos.x*4, pos.y*4, 0]) in
let g = perlin([pos.x*4.1, pos.y*3.9, 0]) in
let b = perlin([pos.x*3.9, pos.y*4.1, 0]) in
let colour = [mp(r), mp(g), mp(b)] in
return
